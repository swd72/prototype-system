[{"C:\\project\\prototype-system\\src\\App.js":"1","C:\\project\\prototype-system\\src\\serviceWorkerRegistration.js":"2","C:\\project\\prototype-system\\src\\index.js":"3","C:\\project\\prototype-system\\src\\provider\\RootNavigation.js":"4","C:\\project\\prototype-system\\src\\reducer\\MyReducer.js":"5","C:\\project\\prototype-system\\src\\views\\SignIn.js":"6","C:\\project\\prototype-system\\src\\reportWebVitals.js":"7","C:\\project\\prototype-system\\src\\provider\\index.js":"8","C:\\project\\prototype-system\\src\\provider\\StateProvider.js":"9","C:\\project\\prototype-system\\src\\route.js":"10","C:\\project\\prototype-system\\src\\views\\Home.js":"11","C:\\project\\prototype-system\\src\\provider\\AuthProvider.js":"12","C:\\project\\prototype-system\\src\\views\\Profile.js":"13","C:\\project\\prototype-system\\src\\views\\SignOut.js":"14","C:\\project\\prototype-system\\src\\text-encoding-polyfill.js":"15","C:\\project\\prototype-system\\src\\views\\InformationData.js":"16","C:\\project\\prototype-system\\src\\views\\PersonManage.js":"17","C:\\project\\prototype-system\\src\\components\\CustomDataTable.js":"18","C:\\project\\prototype-system\\src\\components\\PersonalInformation.js":"19","C:\\project\\prototype-system\\src\\components\\DatePicker.js":"20","C:\\project\\prototype-system\\src\\functions\\index.js":"21","C:\\project\\prototype-system\\src\\components\\AutocompleteAsync.js":"22"},{"size":491,"mtime":1610684798534,"results":"23","hashOfConfig":"24"},{"size":5064,"mtime":1610591917383,"results":"25","hashOfConfig":"24"},{"size":1208,"mtime":1613372003064,"results":"26","hashOfConfig":"24"},{"size":17417,"mtime":1613380572005,"results":"27","hashOfConfig":"24"},{"size":233,"mtime":1613357354718,"results":"28","hashOfConfig":"24"},{"size":4172,"mtime":1612166590474,"results":"29","hashOfConfig":"24"},{"size":364,"mtime":1610591917383,"results":"30","hashOfConfig":"24"},{"size":658,"mtime":1613364206168,"results":"31","hashOfConfig":"24"},{"size":1434,"mtime":1611886123588,"results":"32","hashOfConfig":"24"},{"size":2715,"mtime":1613360603037,"results":"33","hashOfConfig":"24"},{"size":689,"mtime":1611821017296,"results":"34","hashOfConfig":"24"},{"size":4895,"mtime":1613443922845,"results":"35","hashOfConfig":"24"},{"size":3907,"mtime":1611809377014,"results":"36","hashOfConfig":"24"},{"size":348,"mtime":1613457838600,"results":"37","hashOfConfig":"24"},{"size":312,"mtime":1611808269332,"results":"38","hashOfConfig":"24"},{"size":1719,"mtime":1613376010890,"results":"39","hashOfConfig":"24"},{"size":1767,"mtime":1613372120558,"results":"40","hashOfConfig":"24"},{"size":14232,"mtime":1613524296023,"results":"41","hashOfConfig":"24"},{"size":24654,"mtime":1613534655762,"results":"42","hashOfConfig":"24"},{"size":6054,"mtime":1613533233555,"results":"43","hashOfConfig":"24"},{"size":12323,"mtime":1613456502036,"results":"44","hashOfConfig":"24"},{"size":2629,"mtime":1613532205417,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"16iabbf",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"C:\\project\\prototype-system\\src\\App.js",[],["96","97"],"C:\\project\\prototype-system\\src\\serviceWorkerRegistration.js",[],"C:\\project\\prototype-system\\src\\index.js",[],"C:\\project\\prototype-system\\src\\provider\\RootNavigation.js",["98","99","100"],"import React, { useState, useContext, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// import Menu from \"@material-ui/core/Menu\";\r\n// import MenuItem from \"@material-ui/core/MenuItem\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles /*useTheme*/ } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { useSelector } from \"react-redux\";\r\nimport { route } from \"../route\";\r\nimport { deepPurple } from \"@material-ui/core/colors\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport { StateContext } from \"./StateProvider\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n// import NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport FastForwardIcon from \"@material-ui/icons/FastForward\";\r\nimport FastRewindIcon from \"@material-ui/icons/FastRewind\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\nimport { IoIosFingerPrint } from \"react-icons/io\";\r\n\r\nconst drawerWidth = 230;\r\n\r\nconst useStyles = (props) =>\r\n  makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"md\")]: props.side_status\r\n        ? {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n          }\r\n        : {},\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"md\")]: props.side_status\r\n        ? {\r\n            display: \"none\",\r\n          }\r\n        : {},\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      minWidth: 200,\r\n      maxWidth: 1900,\r\n      padding: theme.spacing(3),\r\n    },\r\n    purple: {\r\n      color: theme.palette.getContrastText(deepPurple[300]),\r\n      backgroundColor: deepPurple[300],\r\n    },\r\n    listItem: {\r\n      paddingTop: 5,\r\n      paddingBottom: 5,\r\n    },\r\n    listItemText: {\r\n      fontSize: 20,\r\n      fontWeight: \"bold !important\",\r\n      textAlign: \"center\",\r\n    },\r\n    listItemTextFirst: {\r\n      backgroundColor: \"red\",\r\n    },\r\n    popper: {\r\n      marginTop: 5,\r\n      marginLeft: 25,\r\n      marginRight: 15,\r\n    },\r\n  }));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const [openMessage, setOpenMessage] = useState(false);\r\n  const [openAccount, setOpenAccount] = useState(false);\r\n  const [sidemenu] = useState(route);\r\n\r\n  const history = useHistory();\r\n  const anchorRef = useRef(null);\r\n  const anchorRefAccount = useRef(null);\r\n\r\n  const matches_sm = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\r\n\r\n  const { progress, styleMode, toggleStyle } = useContext(StateContext);\r\n  const { cookies, logout, user, setCookie, token, _token_ } = useContext(\r\n    AuthContext\r\n  );\r\n\r\n  const [side_status, setside_status] = useState(true);\r\n  const classes = useStyles({ side_status: side_status })();\r\n\r\n  useEffect(() => {\r\n    setside_status(cookies.side_status === \"true\" ? true : false);\r\n  }, [cookies, user]);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpenMessage((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleCloseMessage = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpenMessage(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpenMessage(false);\r\n      setOpenMessage(false);\r\n    }\r\n  }\r\n\r\n  const handleMenu = () => {\r\n    setOpenAccount((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (\r\n      anchorRefAccount.current &&\r\n      anchorRefAccount.current.contains(event.target)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setOpenAccount(false);\r\n  };\r\n\r\n  const getRoutes = (routes) => {\r\n    // eslint-disable-next-line\r\n    return routes.map((prop, key) => {\r\n      if (prop.role === null || user?.userType?.indexOf(prop.role) >= 0) {\r\n        return (\r\n          <Route\r\n            exact\r\n            path={\"/manage\" + prop.router}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n    >\r\n      <Divider />\r\n      <List>\r\n        {sidemenu.map(\r\n          (val, index) =>\r\n            (val.role === null || user?.userType?.indexOf(val.role) >= 0) &&\r\n            (user?.username\r\n              ? val.router !== \"/login\"\r\n              : val.router !== \"/logout\") && (\r\n              <ListItem\r\n                button\r\n                className={classes.listItem}\r\n                key={val.title}\r\n                onClick={() => {\r\n                  history.push(\"/manage\" + val.router);\r\n                  setMobileOpen(false);\r\n                }}\r\n              >\r\n                <ListItemIcon>{val.icon}</ListItemIcon>\r\n                <ListItemText primary={val.title} />\r\n              </ListItem>\r\n            )\r\n        )}\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  const drawerListItem = (\r\n    <>\r\n      {matches_sm && <Toolbar variant=\"dense\" />}\r\n      <ListItem button>\r\n        <ListItemAvatar style={{ margin: -8 }}>\r\n          <Avatar className={classes.purple}>\r\n            {user?.fname?.charAt(0)?.toUpperCase()}\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        {user && (\r\n          <ListItemText\r\n            primary={user?.fname + \"  \" + user?.lname}\r\n            secondary={user?.username}\r\n          />\r\n        )}\r\n        {!user && (\r\n          <ListItemText\r\n            primary={\"Guest\"}\r\n            secondary={\"กรุณาเข้าสู่ระบบเพื่อใช้งาน\"}\r\n          />\r\n        )}\r\n      </ListItem>\r\n      {list(\"left\")}\r\n\r\n      {!user && (\r\n        <>\r\n          <List>\r\n            <ListItem\r\n              button\r\n              className={classes.listItem}\r\n              onClick={() => {\r\n                history.push(\"/sigin\");\r\n                setMobileOpen(false);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <IoIosFingerPrint size={30} />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"เข้าสู่ระบบ\"} />\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar\r\n          variant=\"dense\"\r\n          style={\r\n            styleMode === \"dark\"\r\n              ? {\r\n                  backgroundColor: \"#424242\",\r\n                  borderBottom: \"85888C 1px\",\r\n                  color: \"#FFFFFF\",\r\n                }\r\n              : {}\r\n          }\r\n        >\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Hidden smDown implementation=\"css\">\r\n            <IconButton\r\n              onClick={() => {\r\n                setside_status((p) => !p);\r\n                setCookie(\"side_status\", !side_status, { path: \"/\" });\r\n              }}\r\n              color=\"inherit\"\r\n            >\r\n              <Badge color=\"secondary\">\r\n                {side_status ? <FastRewindIcon /> : <FastForwardIcon />}\r\n              </Badge>\r\n            </IconButton>\r\n          </Hidden>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Res\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n          <div>\r\n            <IconButton\r\n              ref={anchorRef}\r\n              aria-controls={openMessage ? \"menu-list-grow\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleToggle}\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon /> {/*NotificationsIcon Message*/}\r\n              </Badge>\r\n            </IconButton>\r\n            <Popper\r\n              open={openMessage}\r\n              anchorEl={anchorRef.current}\r\n              role={undefined}\r\n              transition\r\n              disablePortal\r\n              className={classes.popper}\r\n            >\r\n              {({ TransitionProps, placement }) => (\r\n                <Grow\r\n                  {...TransitionProps}\r\n                  style={{\r\n                    transformOrigin:\r\n                      placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n                  }}\r\n                >\r\n                  <Paper>\r\n                    <ClickAwayListener onClickAway={handleCloseMessage}>\r\n                      <List id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                        <ListItem alignItems=\"flex-start\">\r\n                          <ListItemText\r\n                            className=\"text-center\"\r\n                            primary={\r\n                              <Typography variant=\"body1\">Message</Typography>\r\n                            }\r\n                          />\r\n                        </ListItem>\r\n                        <Divider />\r\n                        <ListItem alignItems=\"flex-start\" button>\r\n                          <ListItemText\r\n                            primary=\"Oui Oui\"\r\n                            secondary={\r\n                              <React.Fragment>\r\n                                <Typography\r\n                                  component=\"span\"\r\n                                  variant=\"body2\"\r\n                                  className={classes.inline}\r\n                                  color=\"textPrimary\"\r\n                                >\r\n                                  Sandra Adams\r\n                                </Typography>\r\n                                {\r\n                                  \" — Do you have Paris recommendations? Have you ever…\"\r\n                                }\r\n                              </React.Fragment>\r\n                            }\r\n                          />\r\n                        </ListItem>\r\n                        <Divider />\r\n                        <ListItem alignItems=\"flex-start\" button>\r\n                          <ListItemText\r\n                            primary=\"Oui Oui\"\r\n                            secondary={\r\n                              <React.Fragment>\r\n                                <Typography\r\n                                  component=\"span\"\r\n                                  variant=\"body2\"\r\n                                  className={classes.inline}\r\n                                  color=\"textPrimary\"\r\n                                >\r\n                                  Sandra Adams\r\n                                </Typography>\r\n                                {\r\n                                  \" — Do you have Paris recommendations? Have you ever…\"\r\n                                }\r\n                              </React.Fragment>\r\n                            }\r\n                          />\r\n                        </ListItem>\r\n                      </List>\r\n                    </ClickAwayListener>\r\n                  </Paper>\r\n                </Grow>\r\n              )}\r\n            </Popper>\r\n\r\n            {/* <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon /> \r\n              </Badge>\r\n            </IconButton> */}\r\n\r\n            <IconButton\r\n              aria-label=\"mode \"\r\n              color=\"inherit\"\r\n              onClick={toggleStyle}\r\n            >\r\n              {styleMode === \"light\" ? (\r\n                <Brightness4Icon />\r\n              ) : (\r\n                <BrightnessHighIcon />\r\n              )}\r\n            </IconButton>\r\n\r\n            {user?.username && (\r\n              <>\r\n                <IconButton\r\n                  ref={anchorRefAccount}\r\n                  aria-controls={openAccount ? \"menu-list-grow\" : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle /> {/*User Account Menu*/}\r\n                </IconButton>\r\n\r\n                <Popper\r\n                  open={openAccount}\r\n                  anchorEl={anchorRefAccount.current}\r\n                  role={undefined}\r\n                  transition\r\n                  disablePortal\r\n                  className={classes.popper}\r\n                >\r\n                  {({ TransitionProps, placement }) => (\r\n                    <Grow\r\n                      {...TransitionProps}\r\n                      style={{\r\n                        transformOrigin:\r\n                          placement === \"bottom\"\r\n                            ? \"center top\"\r\n                            : \"center bottom\",\r\n                      }}\r\n                    >\r\n                      <Paper>\r\n                        <ClickAwayListener onClickAway={handleClose}>\r\n                          <List\r\n                            id=\"menu-list-grow\"\r\n                            onKeyDown={handleListKeyDown}\r\n                          >\r\n                            <ListItem\r\n                              alignItems=\"flex-start\"\r\n                              button\r\n                              onClick={() => history.push(\"/profile\")}\r\n                            >\r\n                              <ListItemText primary=\"Profile\" />\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                              alignItems=\"flex-start\"\r\n                              button\r\n                              onClick={() => {\r\n                                logout();\r\n                                setOpenAccount(false);\r\n                              }}\r\n                            >\r\n                              <ListItemText primary=\"ออกจากระบบ\" />\r\n                            </ListItem>\r\n                          </List>\r\n                        </ClickAwayListener>\r\n                      </Paper>\r\n                    </Grow>\r\n                  )}\r\n                </Popper>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden mdUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={\"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true,\r\n            }}\r\n          >\r\n            {drawerListItem}\r\n          </Drawer>\r\n        </Hidden>\r\n\r\n        {side_status && (\r\n          <Hidden smDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawerListItem}\r\n            </Drawer>\r\n          </Hidden>\r\n        )}\r\n      </nav>\r\n      <Container className={classes.content}>\r\n        <Toolbar variant=\"dense\" />\r\n        <LoadingBar progress={progress} />\r\n        <Switch>{getRoutes(route)}</Switch>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","C:\\project\\prototype-system\\src\\reducer\\MyReducer.js",[],"C:\\project\\prototype-system\\src\\views\\SignIn.js",[],"C:\\project\\prototype-system\\src\\reportWebVitals.js",[],"C:\\project\\prototype-system\\src\\provider\\index.js",[],"C:\\project\\prototype-system\\src\\provider\\StateProvider.js",[],"C:\\project\\prototype-system\\src\\route.js",[],"C:\\project\\prototype-system\\src\\views\\Home.js",[],"C:\\project\\prototype-system\\src\\provider\\AuthProvider.js",[],"C:\\project\\prototype-system\\src\\views\\Profile.js",[],"C:\\project\\prototype-system\\src\\views\\SignOut.js",[],"C:\\project\\prototype-system\\src\\text-encoding-polyfill.js",[],"C:\\project\\prototype-system\\src\\views\\InformationData.js",[],"C:\\project\\prototype-system\\src\\views\\PersonManage.js",["101","102","103","104","105","106","107","108","109","110","111","112"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Form, FormGroup, Label, Container } from \"reactstrap\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { joiResolver } from \"@hookform/resolvers/joi\";\r\nimport Joi from \"joi\";\r\nimport CustomDataTable from \"../components/CustomDataTable\";\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"person_id\",\r\n    firstDot: \"p.\",\r\n    numeric: false,\r\n    sort: true,\r\n    label: \"pid\",\r\n  },\r\n  {\r\n    id: \"cprename_name\",\r\n    numeric: false,\r\n    sort: true,\r\n    label: \"คำนำหน้า\",\r\n  },\r\n  {\r\n    id: \"fname\",\r\n    numeric: false,\r\n    sort: true,\r\n    label: \"ชื่อ\",\r\n  },\r\n  {\r\n    id: \"lname\",\r\n    numeric: false,\r\n    sort: true,\r\n    label: \"สกุล\",\r\n  },\r\n  {\r\n    id: \"cid\",\r\n    numeric: false,\r\n    sort: true,\r\n    label: \"เลขบัตรประชาชน\",\r\n  },\r\n  {\r\n    id: \"cposition_name\",\r\n    numeric: false,\r\n    sort: true,\r\n    label: \"ตำแหน่ง\",\r\n  },\r\n  {\r\n    id: \"clevel_name\",\r\n    numeric: false,\r\n    sort: true,\r\n    label: \"ระดับ\",\r\n  },\r\n  {\r\n    id: \"startwork_date\",\r\n    numeric: false,\r\n    sort: true,\r\n    label: \"วันที่\",\r\n  },\r\n  {\r\n    id: \"pstatus_name\",\r\n    numeric: false,\r\n    sort: true,\r\n    label: \"สถานะ\",\r\n  },\r\n  {\r\n    id: \"๙\",\r\n    numeric: true,\r\n    sort: false,\r\n    disablePadding: false,\r\n    label: \"๙\",\r\n    action_status: true,\r\n  },\r\n];\r\n\r\nexport default function FullScreenDialog(props) {\r\n  return (\r\n    <div>\r\n      <CustomDataTable headCells={headCells} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\project\\prototype-system\\src\\components\\CustomDataTable.js",["113","114","115","116"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport { TableBody } from \"@material-ui/core\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Button, UncontrolledTooltip } from \"reactstrap\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { IoMdTrash } from \"react-icons/io\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport axios from \"axios\";\r\nimport { StateContext } from \"../provider/StateProvider\";\r\nimport { AuthContext } from \"../provider/AuthProvider\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InTableCell = styled.div`\r\n  display: block;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort, headCells } = props;\r\n  const createSortHandler = (property, sort) => (event) => {\r\n    if (sort) {\r\n      onRequestSort(event, property);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(\r\n                (headCell.firstDot ? headCell.firstDot : \"\") + headCell.id,\r\n                headCell.sort\r\n              )}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n  headCells: PropTypes.array.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const { onSearching, searchText, onAddData } = props;\r\n  const classes = useToolbarStyles();\r\n  const createSearch = (event) => {\r\n    onSearching(event);\r\n  };\r\n  return (\r\n    <Toolbar>\r\n      <Typography\r\n        className={classes.title}\r\n        variant=\"h6\"\r\n        id=\"tableTitle\"\r\n        component=\"div\"\r\n      >\r\n        ข้อมูลบุคลากร\r\n      </Typography>\r\n\r\n      <InputBase\r\n        placeholder=\"ค้นหา… ชื่อ, สกุล, รหัสสแกน\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={searchText}\r\n        onChange={createSearch}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n      />\r\n\r\n      <Tooltip title=\"เพิ่มข้อมูล\">\r\n        <IconButton aria-label=\"เพิ่มข้อมูล\" onClick={() => onAddData()}>\r\n          <AddCircle />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  onSearching: PropTypes.func.isRequired,\r\n  onAddData: PropTypes.func.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  chip_spacing: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    contain: \"container\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingRight: `calc(1em + ${theme.spacing(4)}px)`,\r\n  },\r\n  tableRow: {\r\n    \"&$hover:hover\": {\r\n      backgroundColor: \"#CE8ED7\",\r\n    },\r\n    cursor: \"pointer\",\r\n  },\r\n  tableRowCustom: {\r\n    \"&$hover:hover\": {\r\n      backgroundColor: \"#CE8ED7\",\r\n    },\r\n    backgroundColor: \"#ddd\",\r\n    cursor: \"pointer\",\r\n  },\r\n  tableRowCustomDark: {\r\n    \"&$hover:hover\": {\r\n      backgroundColor: \"#CE8ED7\",\r\n    },\r\n    backgroundColor: \"#646262\",\r\n    cursor: \"pointer\",\r\n  },\r\n  hover: {},\r\n}));\r\n\r\nexport default function CustomDataTable(props) {\r\n  const { headCells } = props;\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [orderBy, setOrderBy] = useState(\"p.person_id\");\r\n  const [page, setPage] = useState(0);\r\n  const [totalCount, setTotalCount] = useState(20);\r\n  const [rows, setRows] = useState([]);\r\n  const [dense, setDense] = useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [loading, setLoading] = useState(false);\r\n  const [dialog, setDialog] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [snackOpen, setSnackOpen] = useState(false);\r\n  const [snackMessage, setSnackMessage] = useState(\"\");\r\n\r\n  const { styleMode } = useContext(StateContext);\r\n  const { refresh_token, server_url, token } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [orderBy, page, order, search]);\r\n\r\n  const getData = (loop_token) => {\r\n    axios\r\n      .post(\r\n        `${server_url}/person/getperson`,\r\n        {\r\n          username,\r\n          rowsPerPage,\r\n          page,\r\n          orderBy,\r\n          order,\r\n          keyword: search,\r\n        },\r\n        {\r\n          headers: { authorization: `Bear ${loop_token || token}` }, // กำหนด headers authorization เพื่อส่งให้ api ตรวจสอบ token\r\n        }\r\n      )\r\n      .then((rs) => {\r\n        if (rs.status === 200) {\r\n          setRows(rs.data.results);\r\n          setTotalCount(\r\n            rs.data.results.length > 0 ? rs.data.results[0].xtotal : 0\r\n          );\r\n        } else if (rs.status === 204) {\r\n        }\r\n      })\r\n      .catch(async (error) => {\r\n        if (error.response.status === 400 || error.response.status === 401) {\r\n          refresh_token((cal) => {\r\n            if(cal.token){\r\n              getData(cal.token)\r\n            }\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSearching = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const handelManageUserType = (event) => {\r\n    console.log(event)\r\n    setUsername(event);\r\n    setDialog(true);\r\n  };\r\n\r\n  const handleCloseSnack = () => {\r\n    setSnackOpen(false);\r\n  };\r\n\r\n  const handleDelete = (e, mesage) => {\r\n    confirmAlert({\r\n      title: \"ยืนยันการลบข้อมูล \",\r\n      message: 'คุณต้องการลบข้อมูล \" ' + mesage + ' \" ใช่หรือไม่ \\n',\r\n      buttons: [\r\n        {\r\n          label: \"ใช่\",\r\n          onClick: () => {\r\n            console.log(\"dddd\");\r\n          },\r\n        },\r\n        {\r\n          label: \"ไม่ใช่\",\r\n          onClick: () => \"\",\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, totalCount - page * rowsPerPage);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          onSearching={handleSearching}\r\n          onAddData={handelManageUserType}\r\n          searchText={search}\r\n        />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={totalCount}\r\n              headCells={headCells}\r\n            />\r\n            <TableBody>\r\n              {loading && (\r\n                <TableRow hover role=\"checkbox\">\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    colSpan={7}\r\n                    padding=\"none\"\r\n                    align=\"center\"\r\n                  >\r\n                    <Typography\r\n                      className={classes.title}\r\n                      variant=\"h6\"\r\n                      id=\"tableTitle\"\r\n                      component=\"div\"\r\n                    >\r\n                      กำลังโหลด ...\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {!loading &&\r\n                rows?.map((row, index) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      // role=\"checkbox\"\r\n                      // tabIndex={-1}\r\n                      key={`tb${index}`}\r\n                      classes={{ hover: classes.hover }}\r\n                      className={\r\n                        index % 2\r\n                          ? styleMode === \"dark\"\r\n                            ? classes.tableRowCustomDark\r\n                            : classes.tableRowCustom\r\n                          : classes.tableRow\r\n                      }\r\n                    >\r\n                      {headCells.map((val_head, idx_head) => (\r\n                        <TableCell key={`tbcell${idx_head}`} scope=\"row\">\r\n                          <InTableCell>{row[val_head.id]}</InTableCell>\r\n                        </TableCell>\r\n                      ))}\r\n                      <TableCell>\r\n                        <Button\r\n                          title=\"ลบ\"\r\n                          id=\"deleteButton\"\r\n                          close\r\n                          aria-label=\"Cancel\"\r\n                          onClick={(e) =>\r\n                            handleDelete(\r\n                              row.person_id,\r\n                              row.fname + \" \" + row.lname\r\n                            )\r\n                          }\r\n                        >\r\n                          <span aria-hidden>\r\n                            <IoMdTrash color=\"red\" size=\"30\" />\r\n                          </span>\r\n                        </Button>\r\n\r\n                        <UncontrolledTooltip\r\n                          placement=\"top\"\r\n                          target=\"deleteButton\"\r\n                        >\r\n                          ลบข้อมูลผู้ใช้งาน\r\n                        </UncontrolledTooltip>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 20, 25]}\r\n          component=\"div\"\r\n          count={totalCount}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n      <Snackbar\r\n        open={snackOpen}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnack}\r\n      >\r\n        <Alert onClose={handleCloseSnack} severity={true ? \"success\" : \"error\"}>\r\n          {\" \"}\r\n          {snackMessage}{\" \"}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"ขนาดแถว\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomDataTable.propTypes = {\r\n  headCells: PropTypes.array.isRequired,\r\n};\r\n","C:\\project\\prototype-system\\src\\components\\PersonalInformation.js",["117","118","119"],"C:\\project\\prototype-system\\src\\components\\DatePicker.js",["120"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { defaultProps } from \"default-props\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport range from \"lodash/range\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function DatePicker(props) {\r\n  const { onSelect, startYear, endYear, defaultDate, ref, disabled } = props;\r\n\r\n  const classes = useStyles();\r\n  const [year, setYear] = useState(null);\r\n  const [month, setMonth] = useState(null);\r\n  const [days, setDays] = useState(null);\r\n  const [daysOptions, setDaysOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (defaultDate) {\r\n      const s_default_date = defaultDate.split(\"-\");\r\n      setYear(parseInt(s_default_date[0]));\r\n      setMonth(parseInt(s_default_date[1]));\r\n      setDays(parseInt(s_default_date[2]));\r\n    } else {\r\n      setYear(\"\");\r\n      setMonth(\"\");\r\n      setDays(\"\");\r\n    }\r\n  }, [defaultDate]);\r\n\r\n  useEffect(() => {\r\n    if (year && month && days) onSelect({ year, month, days });\r\n  }, [year, month, days, onSelect]);\r\n\r\n  useEffect(() => {\r\n    if (year && month) {\r\n      var d = new Date(year, month, 0);\r\n      setDaysOptions(range(1, d.getDate() + 1, 1));\r\n    }\r\n  }, [year, month, startYear, endYear]);\r\n\r\n  const yearsOptions = range(\r\n    getYear(new Date(startYear + \"-01-01\")),\r\n    getYear(new Date(endYear + \"-01-01\")) + 1,\r\n    1\r\n  ).reverse();\r\n\r\n  const monthOptions = [\r\n    { value: 1, label: \"มกราคม\" },\r\n    { value: 2, label: \"กุมภาพันธ์\" },\r\n    { value: 3, label: \"มีนาคม\" },\r\n    { value: 4, label: \"เมษายน\" },\r\n    { value: 5, label: \"พฤษภาคม\" },\r\n    { value: 6, label: \"มิถุนายน\" },\r\n    { value: 7, label: \"กรกฎาคม\" },\r\n    { value: 8, label: \"สิงหาคม\" },\r\n    { value: 9, label: \"กันยายม\" },\r\n    { value: 10, label: \"ตุลาคม\" },\r\n    { value: 11, label: \"พฤศจิกายน\" },\r\n    { value: 12, label: \"ธันวาคม\" },\r\n  ];\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"year\") {\r\n      setYear(e.target.value);\r\n    } else if (e.target.name === \"month\") {\r\n      setMonth(e.target.value);\r\n    } else if (e.target.name === \"days\") {\r\n      setDays(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container spacing={0}>\r\n        <Grid item>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.formControl}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">ปี</InputLabel>\r\n            <Select\r\n              ref={ref}\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={year || \"\"}\r\n              onChange={handleChange}\r\n              label=\"ปี\"\r\n              name=\"year\"\r\n              size=\"small\"\r\n              disabled={disabled}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              {yearsOptions.map((val, idx) => (\r\n                <MenuItem key={`yearOption${idx}`} value={val}>\r\n                  {val + 543}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.formControl}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              เดือน\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={month || \"\"}\r\n              onChange={handleChange}\r\n              label=\"เดือน\"\r\n              name=\"month\"\r\n              size=\"small\"\r\n              disabled={disabled}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              {monthOptions.map((val, idx) => (\r\n                <MenuItem key={`monthOption${idx}`} value={val.value}>\r\n                  {val.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.formControl}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              วันที่\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={days || \"\"}\r\n              onChange={handleChange}\r\n              label=\"วันที่\"\r\n              name=\"days\"\r\n              size=\"small\"\r\n              disabled={disabled}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              {daysOptions.map((val, idx) => (\r\n                <MenuItem key={`dayOption${idx}`} value={val}>\r\n                  {val}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nDatePicker.propTypes = {\r\n  onSelect: PropTypes.func.isRequired,\r\n  startYear: PropTypes.any.isRequired,\r\n  endYear: PropTypes.any.isRequired,\r\n  defaultDate: PropTypes.string,\r\n};\r\n\r\nDatePicker.defaultProps = {\r\n  disabled: false,\r\n};\r\n","C:\\project\\prototype-system\\src\\functions\\index.js",[],"C:\\project\\prototype-system\\src\\components\\AutocompleteAsync.js",["121"],"import fetch from \"cross-fetch\";\r\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { AuthContext } from \"../provider/AuthProvider\";\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nexport default function AutocompleteAsync({\r\n  onChange,\r\n  valueDefault,\r\n  api_uri,\r\n  label,\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [defaultValue, setDefaultValue] = useState({});\r\n  const loading = open && options.length === 0;\r\n  const { server_url, token } = useContext(AuthContext);\r\n  const mouted_ = useRef(null);\r\n\r\n  useEffect(() => {\r\n    mouted_.current = true;\r\n    console.log(valueDefault);\r\n    getAsync();\r\n    return () => {\r\n      mouted_.current = false;\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getAsync = async () => {\r\n    const response = await fetch(`${server_url}${api_uri}`, {\r\n      method: \"get\",\r\n      headers: new Headers({\r\n        Authorization: \"Bear \" + token,\r\n      }),\r\n    });\r\n    const options = await response.json();\r\n    setDefaultValue(options.results?.find((e) => e.value === valueDefault));\r\n\r\n    if (mouted_.current) {\r\n      setOptions(options.results);\r\n    }\r\n  };\r\n\r\n  return (options || []).length > 0 ? (\r\n    <Autocomplete\r\n      id=\"asynchronous-demo\"\r\n      style={{ minWidth: 100 }}\r\n      open={open}\r\n      onOpen={() => {\r\n        setOpen(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      onChange={(event, values) => {\r\n        onChange(values);\r\n      }}\r\n      defaultValue={defaultValue?.value ? defaultValue : null}\r\n      getOptionSelected={(option, value) => option.label === value.label}\r\n      getOptionLabel={(option) => option.label}\r\n      options={options}\r\n      loading={loading}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={label}\r\n          variant=\"outlined\"\r\n          size={\"small\"}\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? (\r\n                  <CircularProgress color=\"inherit\" size={20} />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  ) : null;\r\n}\r\n",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":4,"column":25,"nodeType":"128","messageId":"129","endLine":4,"endColumn":33},{"ruleId":"126","severity":1,"message":"130","line":122,"column":45,"nodeType":"128","messageId":"129","endLine":122,"endColumn":50},{"ruleId":"126","severity":1,"message":"131","line":122,"column":52,"nodeType":"128","messageId":"129","endLine":122,"endColumn":59},{"ruleId":"126","severity":1,"message":"132","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"133","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"126","severity":1,"message":"134","line":3,"column":16,"nodeType":"128","messageId":"129","endLine":3,"endColumn":25},{"ruleId":"126","severity":1,"message":"135","line":3,"column":27,"nodeType":"128","messageId":"129","endLine":3,"endColumn":32},{"ruleId":"126","severity":1,"message":"136","line":3,"column":34,"nodeType":"128","messageId":"129","endLine":3,"endColumn":43},{"ruleId":"126","severity":1,"message":"137","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":17},{"ruleId":"126","severity":1,"message":"138","line":4,"column":19,"nodeType":"128","messageId":"129","endLine":4,"endColumn":29},{"ruleId":"126","severity":1,"message":"139","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":12},{"ruleId":"126","severity":1,"message":"140","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":14},{"ruleId":"126","severity":1,"message":"141","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":17},{"ruleId":"126","severity":1,"message":"142","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":21},{"ruleId":"126","severity":1,"message":"143","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":11},{"ruleId":"126","severity":1,"message":"139","line":25,"column":8,"nodeType":"128","messageId":"129","endLine":25,"endColumn":12},{"ruleId":"126","severity":1,"message":"144","line":217,"column":19,"nodeType":"128","messageId":"129","endLine":217,"endColumn":29},{"ruleId":"126","severity":1,"message":"145","line":218,"column":10,"nodeType":"128","messageId":"129","endLine":218,"endColumn":16},{"ruleId":"126","severity":1,"message":"146","line":221,"column":24,"nodeType":"128","messageId":"129","endLine":221,"endColumn":39},{"ruleId":"126","severity":1,"message":"147","line":23,"column":52,"nodeType":"128","messageId":"129","endLine":23,"endColumn":61},{"ruleId":"126","severity":1,"message":"148","line":25,"column":14,"nodeType":"128","messageId":"129","endLine":25,"endColumn":22},{"ruleId":"126","severity":1,"message":"149","line":26,"column":13,"nodeType":"128","messageId":"129","endLine":26,"endColumn":20},{"ruleId":"126","severity":1,"message":"150","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":22},{"ruleId":"126","severity":1,"message":"151","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":15},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'_token_' is assigned a value but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Container' is defined but never used.","'useForm' is defined but never used.","'Controller' is defined but never used.","'Chip' is defined but never used.","'Avatar' is defined but never used.","'TextField' is defined but never used.","'joiResolver' is defined but never used.","'Joi' is defined but never used.","'setLoading' is assigned a value but never used.","'dialog' is assigned a value but never used.","'setSnackMessage' is assigned a value but never used.","'getValues' is assigned a value but never used.","'control2' is assigned a value but never used.","'errors2' is assigned a value but never used.","'defaultProps' is defined but never used.","'sleep' is defined but never used.","no-global-assign","no-unsafe-negation"]